stages:
  - build
  - test
  - package
  - publish

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH !~ /^\d+-/
    - if: $CI_COMMIT_TAG

variables:
  NUGET_PROJECT_ID_DEV: 18697166
  NUGET_PROJECT_ID_RELEASE: 21286970

.defaults:
  rules:
    - &is_master $CI_COMMIT_BRANCH == 'master'
    - &is_release $CI_COMMIT_TAG =~ /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?$/i
    - &not_release $CI_COMMIT_TAG !~ /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?$/i
  client_cache: &client_cache
    key: client
    paths:
      - 'Client/node_modules/'
  before_script: &before_script
    - dotnet nuget add source --name sequence --username $NUGET_USERNAME
      --password $NUGET_TOKEN --store-password-in-clear-text
      "https://gitlab.com/api/v4/projects/$NUGET_PROJECT_ID/packages/nuget/index.json"

build server:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  variables:
    NUGET_PROJECT_ID: $NUGET_PROJECT_ID_DEV
    NUGET_USERNAME: $NUGET_USER_DEV
    NUGET_TOKEN: $NUGET_TOKEN_DEV
  before_script: *before_script
  script:
    - cd ./Server
    - dotnet build -c Release
  artifacts:
    paths:
      - 'Client/Server'
      - 'Server/*/bin'
      - 'Server/*/obj'
    expire_in: 2 hours

test server:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:6.0
  needs:
    - build server
  script:
    - cd ./Server
    - dotnet test --no-build -c Release

build client:
  stage: build
  image: node:latest
  script:
    - cd ./Client
    - npm install
    - npm run compile
  artifacts:
    paths:
      - 'Client/out'
    expire_in: 2 hours
  cache: *client_cache

test client:
  stage: test
  image: node:latest
  needs:
    - build client
  before_script:
    - apt update
    - apt install -y libasound2 libgbm-dev libgtk-3-0 libnss3 xvfb
  script:
    - cd ./Client
    - xvfb-run -a npm run test
  cache:
    <<: *client_cache
    policy: pull

package extension:
  stage: package
  image: node:latest
  needs:
    - build server
    - test server
    - build client
    - test client
  script:
    - cd ./Client
    - npm run package-ci
  rules:
    - if: *is_release
    - if: *is_master
    - if: *not_release
      when: manual
      allow_failure: true
  cache:
    <<: *client_cache
    policy: pull
  artifacts:
    name: 'sequence-scl.vsix'
    paths:
      - 'Client/*.vsix'
    expire_in: 3 months

publish extension:
  stage: publish
  image: node:latest
  needs:
    - package extension
  script:
    - cd ./Client
    - npm run publish-ci
  rules:
    - if: *is_release
  cache:
    <<: *client_cache
    policy: pull
